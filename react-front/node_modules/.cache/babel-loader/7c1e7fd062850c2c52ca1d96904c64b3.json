{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  'tfOpName': 'SparseFillEmptyRows',\n  'category': 'sparse',\n  'inputs': [{\n    'start': 0,\n    'name': 'indices',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'values',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'denseShape',\n    'type': 'tensor'\n  }, {\n    'start': 3,\n    'name': 'defaultValue',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'SparseReshape',\n  'category': 'sparse',\n  'inputs': [{\n    'start': 0,\n    'name': 'inputIndices',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'inputShape',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'newShape',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'SparseSegmentMean',\n  'category': 'sparse',\n  'inputs': [{\n    'start': 0,\n    'name': 'data',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'segmentIds',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'SparseSegmentSum',\n  'category': 'sparse',\n  'inputs': [{\n    'start': 0,\n    'name': 'data',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'segmentIds',\n    'type': 'tensor'\n  }]\n}];","map":{"version":3,"sources":["../../../src/operations/op_list/sparse.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAIH,OAAO,MAAM,IAAI,GAAe,CAC9B;AACE,cAAY,qBADd;AAEE,cAAY,QAFd;AAGE,YAAU,CACR;AAAC,aAAS,CAAV;AAAa,YAAQ,SAArB;AAAgC,YAAQ;AAAxC,GADQ,EAER;AAAC,aAAS,CAAV;AAAa,YAAQ,QAArB;AAA+B,YAAQ;AAAvC,GAFQ,EAGR;AAAC,aAAS,CAAV;AAAa,YAAQ,YAArB;AAAmC,YAAQ;AAA3C,GAHQ,EAIR;AAAC,aAAS,CAAV;AAAa,YAAQ,cAArB;AAAqC,YAAQ;AAA7C,GAJQ;AAHZ,CAD8B,EAW9B;AACE,cAAY,eADd;AAEE,cAAY,QAFd;AAGE,YAAU,CACR;AAAC,aAAS,CAAV;AAAa,YAAQ,cAArB;AAAqC,YAAQ;AAA7C,GADQ,EAER;AAAC,aAAS,CAAV;AAAa,YAAQ,YAArB;AAAmC,YAAQ;AAA3C,GAFQ,EAGR;AAAC,aAAS,CAAV;AAAa,YAAQ,UAArB;AAAiC,YAAQ;AAAzC,GAHQ,CAHZ;AAQE,WAAS,CACP;AAAC,cAAU,GAAX;AAAgB,YAAQ,OAAxB;AAAiC,YAAQ,OAAzC;AAAkD,oBAAgB;AAAlE,GADO;AARX,CAX8B,EAuB9B;AACE,cAAY,mBADd;AAEE,cAAY,QAFd;AAGE,YAAU,CACR;AAAC,aAAS,CAAV;AAAa,YAAQ,MAArB;AAA6B,YAAQ;AAArC,GADQ,EAER;AAAC,aAAS,CAAV;AAAa,YAAQ,SAArB;AAAgC,YAAQ;AAAxC,GAFQ,EAGR;AAAC,aAAS,CAAV;AAAa,YAAQ,YAArB;AAAmC,YAAQ;AAA3C,GAHQ;AAHZ,CAvB8B,EAgC9B;AACE,cAAY,kBADd;AAEE,cAAY,QAFd;AAGE,YAAU,CACR;AAAC,aAAS,CAAV;AAAa,YAAQ,MAArB;AAA6B,YAAQ;AAArC,GADQ,EAER;AAAC,aAAS,CAAV;AAAa,YAAQ,SAArB;AAAgC,YAAQ;AAAxC,GAFQ,EAGR;AAAC,aAAS,CAAV;AAAa,YAAQ,YAArB;AAAmC,YAAQ;AAA3C,GAHQ;AAHZ,CAhC8B,CAAzB","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'SparseFillEmptyRows',\n    'category': 'sparse',\n    'inputs': [\n      {'start': 0, 'name': 'indices', 'type': 'tensor'},\n      {'start': 1, 'name': 'values', 'type': 'tensor'},\n      {'start': 2, 'name': 'denseShape', 'type': 'tensor'},\n      {'start': 3, 'name': 'defaultValue', 'type': 'tensor'},\n    ]\n  },\n  {\n    'tfOpName': 'SparseReshape',\n    'category': 'sparse',\n    'inputs': [\n      {'start': 0, 'name': 'inputIndices', 'type': 'tensor'},\n      {'start': 1, 'name': 'inputShape', 'type': 'tensor'},\n      {'start': 2, 'name': 'newShape', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'SparseSegmentMean',\n    'category': 'sparse',\n    'inputs': [\n      {'start': 0, 'name': 'data', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'},\n      {'start': 2, 'name': 'segmentIds', 'type': 'tensor'},\n    ]\n  },\n  {\n    'tfOpName': 'SparseSegmentSum',\n    'category': 'sparse',\n    'inputs': [\n      {'start': 0, 'name': 'data', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'},\n      {'start': 2, 'name': 'segmentIds', 'type': 'tensor'},\n    ]\n  }\n];\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}