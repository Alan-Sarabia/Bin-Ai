[{"/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/index.js":"1","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/reportWebVitals.js":"2","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/App.js":"3","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Title/Title.js":"4","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/SVG/Background.js":"5","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Footer/Footer.js":"6","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Button/Button.js":"7","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Cards/Text.js":"8","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Cards/Card.js":"9","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Button/hashmap.js":"10"},{"size":244,"mtime":1635808339263,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1635389982447,"results":"13","hashOfConfig":"12"},{"size":523,"mtime":1635815017076,"results":"14","hashOfConfig":"12"},{"size":184,"mtime":1636062444897,"results":"15","hashOfConfig":"12"},{"size":708,"mtime":1636062007631,"results":"16","hashOfConfig":"12"},{"size":2993,"mtime":1635808339259,"results":"17","hashOfConfig":"12"},{"size":4095,"mtime":1636064790580,"results":"18","hashOfConfig":"12"},{"size":3541,"mtime":1636061605380,"results":"19","hashOfConfig":"12"},{"size":2382,"mtime":1635815067105,"results":"20","hashOfConfig":"12"},{"size":91818,"mtime":1635815067101,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a7en7i",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/index.js",[],"/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/reportWebVitals.js",[],"/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/App.js",["45"],"import React from 'react';\nimport './App.css';\nimport Title from './Title/Title'\nimport Background from './SVG/Background'\nimport Footer from './Footer/Footer';\n// import { Router } from 'react-router';\n import {BrowserRouter, Route} from 'react-router-dom';\n\n<script src=\"js/bootstrap.min.js\" crossorigin=\"anonymous\"></script>\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Title/>\n        <Background/>\n        <Footer/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Title/Title.js",[],"/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/SVG/Background.js",[],"/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Footer/Footer.js",[],"/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Button/Button.js",["46"],"import React, { useState, useRef, useReducer } from \"react\";\nimport * as tf from '@tensorflow/tfjs' ;\nimport * as mobilenet from \"@tensorflow-models/mobilenet\";\nimport './Button.css'\nimport hashmap from \"./hashmap\";\n//import { useHistory } from \"react-router-dom\";\n//import Card from \"../Cards/Card\";\n//import 'bootstrap/dist/css/bootstrap.min.css';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\n/*import r1 from \"../img/r1.jpeg\";\nimport ob2 from '../img/ob2.jpg';\nimport desafio3 from '../img/desafio3.jpg'\nimport metal from '../img/metal.jpeg'*/\n\n\n\nconst machine = {\n  initial: \"initial\",\n  states: {\n    initial: { on: { next: \"loadingModel\" } },\n    loadingModel: { on: { next: \"modelReady\" } },\n    modelReady: { on: { next: \"imageReady\" } },\n    imageReady: { on: { next: \"identifying\" }, showImage: true },\n    identifying: { on: { next: \"complete\" } },\n    complete: { on: { next: \"modelReady\" }, showImage: true, showResults: true }\n  }\n};\n\nfunction Button() {\n  \n\n  tf.setBackend(\"cpu\");\n  //const history = useHistory();\n  const [results, setResults] = useState([]);\n  const [tips, setTips] = useState([]);\n  const [card, setCard] = useState([]);\n  const [imageURL, setImageURL] = useState(null);\n  const [model, setModel] = useState(null);\n  const imageRef = useRef();\n  const inputRef = useRef();\n\n  const reducer = (state, event) =>\n    machine.states[state].on[event] || machine.initial;\n\n  const [appState, dispatch] = useReducer(reducer, machine.initial);\n  const next = () => dispatch(\"next\");\n  \n\n   const loadModel = async () => {\n    next();\n    //history.push(\"/hola\");\n    const model = await mobilenet.load();\n    setModel(model);\n    next();\n  };\n\n  const identify = async () => {\n    next();\n    const results = await model.classify(imageRef.current);\n    setResults(results);\n    const tips = hashmap(results[0].className);\n    //const card = Card({imageSource:metal, title: \"Reciclaje de Metales\", text:\"El proceso de reciclado empieza cuando el usuario separa sus residuos. Luego, se recogen y clasifican los distintos metales, para procesarlos por separado. Las latas de aluminio y acero se comprimen para llevarlas a la planta de reciclado correspondiente. Luego, se trituran y un imán separa el acero del aluminio.\", url:\"https://www.serviciodedesguace.com/#Quehacemos\"});\n    setTips(tips)\n   // setCard(card)\n    next();\n  };\n\n  const reset = async () => {\n    setTips([]);\n    setResults([]);\n    next();\n  };\n\n  /*const consejo = async () => {\n    \n    next();\n  };*/\n\n  const upload = () => inputRef.current.click();\n\n  const handleUpload = event => {\n    const { files } = event.target;\n    if (files.length > 0) {\n      const url = URL.createObjectURL(event.target.files[0]);\n      setImageURL(url);\n      next();\n    }\n  };\n  \n  const actionButton = {\n    initial: { action: loadModel, text: \"Cargar modelo\" },\n    loadingModel: { text: \"Cargando modelo...\" },\n    modelReady: { action: upload, text: \"Subir imagen\" },\n    imageReady: { action: identify, text: \"Identificar\" },\n    identifying: { text: \"Identificando...\" },\n    //tips: {action: consejo, text: \"tips\"},\n    complete: { action: reset, text: \"Resetear\" }\n  };\n\n  const { showImage, showResults } = machine.states[appState];\n//Te dice como reciclar\n    if (typeof results[0] !== 'undefined') {\n      // your code here\n\n    }\n    \n  return (\n    <div  >\n      \n      {showImage && <img src={imageURL} alt=\"upload-preview\" ref={imageRef} />}\n      <input hidden\n        type=\"file\"\n        accept=\"image/*\"\n        capture=\"camera\"\n        onChange={handleUpload}\n        ref={inputRef}\n      />\n      {showResults && (\n        <ul>\n          {results.map(({ className, probability }) => (\n            <li key={className}>{`${className}: %${(probability * 100).toFixed(\n              2\n            )}`}</li>\n          ))}\n        </ul>\n      )}\n      \n      <p>{tips}\n      {card}</p>\n      <button class=\"btn effect01\" target=\"_blank\"onClick={actionButton[appState].action || (() => {})}>\n        {actionButton[appState].text} \n      </button>\n\n    </div>\n  );\n}\n\nexport default Button;\n","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Cards/Text.js",["47","48"],"import React from 'react'\nimport './Text.css';\nimport Card from \"./Card\";\nimport r1 from \"../img/r1.jpeg\";\nimport ob2 from '../img/ob2.jpg';\nimport desafio3 from '../img/desafio3.jpg'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst card = [\n    {\n      id: 1,\n      title: \"Reciclaje\",\n      image: r1,\n      url: \"https://es.wikipedia.org/wiki/Reciclaje\",\n      text: \"El reciclaje es un proceso cuyo objetivo es convertir residuos en nuevos productos o en materia prima para su posterior utilización. Se previene el desuso de materiales potencialmente útiles, se reduce el consumo de nueva materia prima y el uso de energía, se previene la contaminación del aire a través de la incineración y del agua (a través de los vertederos), así como también se disminuyen las emisiones de gases de efecto invernadero en comparación con la producción de plásticos. \",\n\n      id: 2,\n      title2: \"Obsolescencia programada\",\n      image2: ob2,\n      url2: \"https://es.wikipedia.org/wiki/Obsolescencia_programada\",\n      text2: \"La obsolescencia programada u obsolescencia planificada es la determinación o programación del fin de la vida útil de un producto, de modo que, tras un período de tiempo calculado de antemano por el fabricante o por la empresa durante la fase de diseño del mismo, éste se torne obsoleto, no funcional, inútil o inservible por diversos procedimientos, por ejemplo por falta de repuestos, induciendo a los consumidores a la compra de un nuevo producto que lo sustituya​. Su función es generar mayores ingresos debido a compras más frecuentes, que redundan en beneficios económicos continuos por periodos de tiempo más largos para empresas o fabricantes.  \",\n\n      id: 3,\n      title3: \"Desafios ambientales\",\n      image3: desafio3,\n      url3: \"https://es.mongabay.com/2021/01/desafios-ambientales-argentina-2021-deforestacion-humedales-agronegocios/\",\n      text3: \"El 2021 presenta múltiples retos para el país más austral del continente. Algunas de fondo, como discutir el modelo productivo; otras más puntuales, como la sanción y puesta en marcha de normas legales en relación a bosques, humedales, glaciares o explotaciones mineras. Lograr que lo ambiental sea parte de la agenda política cotidiana y aumentar la conciencia y la participación ciudadana en estos temas también integran el panel de desafíos para 2021.\"\n    },\n   \n  ];\n\n  /*const CardTwo = [\n    {\n        id: 2,\n        //title: \"Fazt Blog\",\n        //image: image2,\n        url: \"https://blog.faztweb.com\",\n      },\n      \n  ]\n  \n  const CardThree = [\n    {\n        id: 3,\n        //title: \"Fazt Youtube\",\n        //image: image3,\n        url: \"https://youtube.com/fazttech\",\n      },\n  ]\n  */\nfunction Text() {\n    return (\n      \n        <div className=\"texto\">\n        <div className=\"card-group\">\n          {card.map(({ title, title2, title3, image, image2, image3, url, url2, url3, id , text, text2, text3}) => (\n            <div className=\"container\" key={id}>\n              \n              <Card imageSource={image} title={title} url={url} text={text}\n              \n              />  \n             <br/>\n              <Card imageSource={image3} title={title3} url={url3} text={text3}\n              \n              />\n              <br/>\n              <Card imageSource={image2} title={title2} url={url2} text={text2}\n              \n              />\n              \n            </div>\n            \n            \n          ))}\n        \n          \n        </div>\n      </div>\n    )\n}\n\n\n\n\nexport default Text","/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Cards/Card.js",[],"/home/lucas/Documentos/GitHub/Bin-Ai/react-front/src/Button/hashmap.js",[],{"ruleId":"49","severity":1,"message":"50","line":7,"column":25,"nodeType":"51","messageId":"52","endLine":7,"endColumn":30},{"ruleId":"49","severity":1,"message":"53","line":37,"column":16,"nodeType":"51","messageId":"52","endLine":37,"endColumn":23},{"ruleId":"54","severity":1,"message":"55","line":18,"column":7,"nodeType":"56","messageId":"57","endLine":18,"endColumn":9},{"ruleId":"54","severity":1,"message":"55","line":24,"column":7,"nodeType":"56","messageId":"57","endLine":24,"endColumn":9},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'setCard' is assigned a value but never used.","no-dupe-keys","Duplicate key 'id'.","ObjectExpression","unexpected"]